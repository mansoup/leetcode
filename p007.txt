给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。
class Solution {
public:
    int reverse(int x) {
       bool flag=false;//false代表x值为正 
       long long t=0;
       if(x<0&&x!=-2147483648) {t=-x;flag=true;}
        else if(x==-2147483648) return 0;
        else t=x;
       long long res=0;
       while(t!=0){
           res=res*10+t%10;
           t/=10;
       }
        if(res>INT_MAX) return 0;
       if(flag==true) return -res;
       else return res;
    }
};
注意:
假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。
//2^31-1=2147483647,-2^31=-2147483648 注意范围尤其输入为-2147483648时候，这个时候反转就超出了x的表示范围
//runtime error: negation of -2147483648 cannot be represented in type 'int';
//cast to an unsigned type to negate this value to itself (solution.cpp) 所以这个long long t也是多余的了
